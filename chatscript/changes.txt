version 4.91
1. bug fix for rejoinder

version 4.9
1. IsNumber(x) fails if x is not an integer, float, or currency number. It succeeds otherwise, with no output.
2. ^find(@3 $F) can now return position of fact in set
3. Now legal to have null facts in a factset.
4. ^nth(@3subject 12) returns the 12th entry in the set
5. ^setrejoinder now takes optional 1st argument of input or output
6. ^rejoinder takes optional argument which is the rule above the rejoinder block to use

version 4.83 
1. :context to display current valid context
2. removed  .<_0 and .>_0 
3. :testpattern can now name ~topic.label instead of a pattern, to test an existing rule.
4. new manual- ChatScript Pattern Redux

version 4.82  Heavily Stabilized version- Rose Version for Loebners
1. %crosstalk is a 4k buffer you can store data in across bots or users or document reads... it's engine resident.
2. ^unmark(word all)  remove ALL references that match this word in sentence
3. %freetext (kb of available text space) %freedict (unused words) %freefact (unused facts)
4. revised nltk bot to manage memory by default so it can read anything

version 4.81
1. adding a concept modifier MORE allows you to extend a concept previously declared.  concept: ~city MORE (...)
2. rules with label prefix CX_ will also set context even if they dont generate output
3. ^incontext now returns the volley that matched if it succeeds.
4 added old paper ChatBots 101 to papers.


version 4.8 - WARNING- save file format change. All prior user topic files are ignored.

1. added query  direct_all   to allow you to get all user facts into a factset (query needs to make from = user
2. any concept defined with a major pos restriction (NOUN,VERB,ADJECTIVE,ADVERB) will make member facts that only allow that use of the word to be a member. And this is recursive through any referenced concept.
3. ^DELETE can now kill an individual fact
4. ^conceptlist now requires a first argument of TOPIC CONCEPT or BOTH
5. ^incontext(label or topic.label) fails if the given label has not generated output within the 4 previous volleys. Succeeds if label has.
6. ^addcontext(topic label) sets a context. Label does not have to exist as a real label.  Topic can be ~ meaning current topic.
6. new command line params users= and logs= to set directories.
7. optional 1st argument "once" to ^burst, makes the burst return the first separation and then the rest of the value unburst.
8. you can now wildcard word spellings with an * in front as well. Eg  u: ( *ator ) matches "I ate a reactor"
9. ^setwildcardindex(val)  tells a pattern match to resume dishing out wildcard slots at the given val (so you don't clobber prexisting useful values)

version 4.7b
1. ^conceptlist takes optional 1st argument of (CONCEPT or TOPIC or BOTH), returns the set referenced.
2. :extratopic filename  will import that file which was written by :topicdump of a topic, and convert it into internal binary format suitable for a PerformChatWithTopic, and in local mode will disable the topic named in the binary(if there is one) and add the binary and use PerformChatWithTopic instead of PerformChat. Used to test the PerformChatWithTopic interface.
3. :identify prints out the starter label of version and compile date and ^identify()
4; ^removeinternalflag (word HAS_HAS_SUBSTITUTE) will disable substition from that word (permanently)
5. ^disable(rejoinder) now ^disable(outputrejoinder) and ^disable(inputrejoinder) added

version 4.7
1. ^respond(topic.tag) or ^respond(topic.label) skips over all responders before the tag/label, starting at the given place instead. If the topic is declared Random, it will ignore that and perform sequential scanning instead.
2. EVServer log format made conformant with non-evserver and user log format
3. :regress terse file now allowed, only comments on bad changed things.
4. PerformChatWithTopic mirrors PerformChat but has extra argument of a topic from external (documented in External Communication)
5. :topicdump dumps named topic or all topics into lines of source, 1 per rule of the topic, in internal text format. (documented in External Communication)

version 4.6b
1. prefixing username on startup with * in client or stand-alone mode, allows
user to speak first.

version 4.6
1. the stand alone system recognizes 3 oob messages:
	alarm=xxx
	callback=xxx
	loopback=xxx
If alarm is set, an incoming [alarm] will be sent to CS after the xxx milliseconds have been completed after completion of any current volley.

If a callback is set, an incoming [callback] will be sent to CS after xxx milliseconds, unless the user starts typing first, in which case the callback is cancelled

If a loopback is set, an incoming [loopback] will be sent to CS xxx milliseconds after
the most recent output, unless the user starts typing first, in which case it resets and tries again after the next volley

2. new parameter output=  sets a line length limit for output of chatbot forcing \r\n as needed
3. disable(rule ~) disables current rule
4. :abstract story (display just topics with gambits and their gambits (+ rejoinders)
5. :abstract responder (display topics and their responders (+ rejoinders)
6. :abstract allows a list of topics to do
7. new folder WEBINTERFACE holds the old index.php script under SIMPLE, and  improved scripts under BETTER support the 3 oob messages as well as scrollable log

version 4.5
1. if the filesxxx file is not found at the top level of CS, it will also look at the containing folder. THerefore you can put your own rawdata and filesxxx build files in there, put the CS folder in there, and update CS by merely replacing the CS folder entirely. If you have your own livedata, it can be in that outer folder and a command
line parameter tells CS to use it instead of the default folder.
2. system= and english=  can be used to redirect accessing those folders within LIVEDATA. This means you can make your own copy of livedata (eg above cs) and then redirect CS to that to have your substitutions, but redirect these 2 folders to stay within chatscript for updating.
3. :conceptlist to list all concepts or all matching a pattern like ~ye*
4. documented :concepts which if given a word, lists all concepts affiliated with it.
 (faster and more convenient that :prepare sometimes)


version 4.4e
1. ^findtext now takes optional 4th argument "insensitive" to test with case insensitivity
2. ^burst, if you dont tell it what to use to separate, will default to using BOTH
underscore and space.
3. improved placenumber labelling and 24'th is now accepted as a placenumber (the ')
4. new document Overview Input to Output
5. :regress file format changed, now works with :trim as well. You need to redo any regression file using init again.
6. documented more codes for query scripts (S V O in section 1)
7. altered ^first,last,pick to accept @0raw and field to accept @0 raw

version 4.4d
1. noticable bug relating to multiword recognition like "creme brulee" in dictionary fixed.
2. improved display on :verify pattern and :testpattern
3. better display for :regress
4. bug with concepts declared with a systemflag (which didnt get set) fixed


version 4.4c
1. optional second argument to ^first,^last,^last is KEEP which means select but dont erase the fact member
2. ^Getverify(tag) will retrieve the verify tag content if it exists in the VERIFY directory
3. concept declaration can now have property UPPERCASE_MATCH, when used with _~concept in pattern match, result will force uppercase wildcard storage regardless of how you entered the words (storing the title or name of someone)
4. :trace reject  shows you what messages were not given because they repeated.
5. ^result(stream)  evaluates the stream, traps ANY return code and returns the text of the return code.

version 4.4b
1. :trace SAMPLE displays the sample input when tracing a rule.
2. definition of << >> pattern match modified to set the matching location AFTER the >> to be just like the start of a match, ie something that looks like < * (match the next listed token anywhere in the sentence).
3. ^phase(_0 noun) returns noun phrase running thru here
   ^phrase(_0 preposition) does it for prep phrases
   ^phrase(_0 verbal) does it for verbals;
4: script compiler now accepts the declaration
	query:  name  "query string data"  
to define private queries analogous to LIVEDATA/SYSTEM/queries.txt
5. :queries lists all defined queries
6. ^field now accepts flag as a type
7. ^hasanyproperty and ^hasallproperty now accepts CONCEPT and TOPIC as choices
8. USER_FLAG1 .. USER_FLAG4 now defined as marks you can put on facts.
9. if 1st arg to ^setposition is a match var, then it will take 2 more args (start + end) and set the position data for that matchvar.

version 4.4
1. ~dateinfo marked on dates (some combination of month day, month year, month/day year
2.  tokenization control DO_DATE_MERGE now exists so dates involving month + year/day can be merged into one token
3. indirect function calls are now supported...
	e.g outputmacro: ^x(^arg1 ^arg2) ^arg1(^arg2) or
	$$tmp(argument) or _9(argument)
4. format strings are safe to use directly as arguments to functions. 
5. Advanced users manual split into that + ChatScript System Functions Manual
6. Use of ^mark with a regular word (not concept) will force that word to reflect in ^conceptlist even though it is not a concept.
7. :trace label reports as it passes thru labelled rules
8: ^dbopen(^"null") will fake a dummy postgress database whereby you can run code without actually storing anything away.
9. :commands on    :commands off    to locally disable :commands



Version 4.33d 
1. format strings ^"xxx" are allowed to continue onto successive lines. Will have only a single space at each line break, regardless of how many were before or after
2.  rename: can now declare user defined number constants:  ##myconstant 244
(check for hex also)
3. ^END(CALL) to termiate a user function call but appear normal afterwards.
4. ^pos(RAW number) returns the word at that posn in the sentence
5. builtin concept ~daynumber defined (for numbers 1 - 31)
6 optional exclude arguments to ^conceptlist removed. Instead ^addproperty(~set NOCONCEPTLIST) to sets to ignore
7. :document reader will react to any :command given at start of lines in document file.

8. concept ~being_list merged onto ~beings and thus deleted
9.  ~BE_VERBS removed from ~special_activity_verbs



Version 4.33c
1.  ^burst now allows optional first arg WORDCOUNT to return how many words appear if you burst (doesnt do the burst).
2. ^sort now accepts additional factset args and sorts them to match the sort of the first argument
3. _3 = ^field(factid all) will spread subject/verb/object onto _3, _4, _5
4. OUTPUT_NOUNDERSCORE flag for log will convert underscores to spaces (which is what output to user do automatically)


Version 4.33b (extra stable version)
1. when running CS as client=, if you enter a :restart command to the server it will do that, but also restart the client= asking you for a new login.
2. ^decodepos(pos index) gives text value of POS bits at that word location or
   ^decodepos(role index) gives text value of ROLE bits 
3. ~uppercase and ~utf8 concepts added to system
4. conceptlist takes any number of additional set arguments to exclude including
	~pos, ~sys, ~role  to exclude those underlying sets
5. extended documentation of ^pos() includin new:
	^pos(hex32 number) ^pos(hex64 number) converts ints to hex 0x...
	^pos(conjugate word POSCODE) returns inflected word


Version 4.33a
0. fixed crash bug found by user
1. fixed infinite loop bug found by user

Version 4.33
0. ^GetRole  ^getPos returning parse data about a word in a sentence
1. login= command line parameter
2  :trace SQL added
3. auto double quoting for postgres text args that contain a quote
4. extra optional initial arg to ^eval like ^print, flags to control how it generates its answer.
5. output macroargs accept optional control specifier .HANDLE_QUOTES (good with postgres)
6. :variables match shows match variable bindings
7. rename: _goodname _10  as top level script element to relabel match variables
	and @myname @10 to relable factsets


Version 4.32
0. removed :debug (debugger system)
1. bug fixes to :testtopic, script compiler, possible termination of engine on certain input sequences 
2 substitutes.txt file split to noise.txt which covers all noise words that erase themselfs. DO_NOISE is now included in DO_SUBSTITUTE_SYSTEM so it is compatible, but
if you turned off some files and used DO_SUBSTITUTE, you may want to add in DO_NOISE
3. ~topic added to detect words that are names of topic (with or without ~)
4. ^conceptlist() given a wildcard reference or absolute index in a sentence, generates facts of the concepts referenced by that location.
5. for composite proper names, mark will now mark also the last word, and if the name is a human name, the first word as well. 
6. %bot added, parallels $bot (and is better to use system variable)
7. systemflags for pos-tag tie values now exposed via names:
PROBABLE_PREPOSITION, PROBABLE_ADVERB, PROBABLE_ADJECTIVE,PROBABLE_VERB,PROBABLE_NOUN usable with ^GetProperty
8. ^"xxx" strings (both format and functional) are now allowed to use [][] choices and make function calls.


Version 4.31  --- fixes FUNDAMENTAL bug in dictionary code... 
0. fixed script in :document writeup, enhanced :wikitext
1. added ^uniquefact to intersect two sets and returns items in 1 not in 2
2. allowing ^analyze within main control and not just postprocessing
3. ^postprocessprint now split into ^postprintbefore and ^postprintfafter based on prepending or postpending the output to existing output
4. redocumented *-1, an example of a backwards wildcard to retrieve the word before the current location in pattern matching
5. ^memorymark() and ^memoryfree() to manage memory when reading really large documents
6. disabled the optional language argument to :restart, removed language.txt file
7. :facts @3  now displays contents of a factset
8. server default volley limit (save=) now defaults to 1, save every time. High volume servers might optimize by raising this, but there is no need on low-volume servers.  userhold= server parameter removed.
9.  :quit can be placed in a file you :source or a top file you :build and it skips the rest of the file.
10. emergency allocation scheme added for if user topic file gets bigger than your cache allocation value

Version 4.3 
0. :wikitext to extract plain text from mediawiki format (wikipedia, simplepedia)
1. :document revised and expanded document of its own (in esoterica) along with :wikitext
2. ^postprocessprint changed to append its output to the existing output, rather than putting it before the existing output.
3.  file open path revisions to allow IOS to do :build and other commands

Version 4.24
0. default builds all are sans postgress support. Additional builds that support postgres are all labeled ChatScriptpg. Some machines like Windows Server 2008 do not have some std visual studio libraries that postgres client uses, unless you have installed the postgres server.
1. tcpopen now url-encodes its data argument SO YOU SHOULDN'T. Except you can use GETU and POSTU to indicate you are supplying preencoded data. Also it sets $$tcpopen_error with a message if the function fails. GET bug fixed.
2. ^log now takes OPEN and CLOSE arguments that can replace FILE, to keep a file open for writing when used heavily in a volley (like during :document)
3. ^findtext( source pattern startoffset) returns index of the pattern first find in source starting at offset
4. ^extract( source from to) returns the substring designated -  combined with #3 and it's handy for using tcpopen to read web pages for specific data.
5. fixed bugs with serverctrlz, :document xxx single, tcpopen,
6. new document "What is ChatScript"

Version 4.23
1. %os tells what os you are: windows, mac, linux, ios, android (if you #define ANDROID)
2. talk.vbs script added to chatscript root and harry now speaks by default on windows. See ~Xpostprocess in simplecontrol.top
3. tcpopen and popen accept null for function argument 
4. paramater serverprelog tells server to log input before working on it, helps see crashes
5. fixed crash in tcpopen
6. parameter serverctrlz tells server to complete output with ascii 0 then 0xfe 0xff
7. prior change of server socket parameters from SO_REUSEADDR to SO_LINGER seemed to cause problems. Revised to SO_REUSEADDRE false.

Version 4.22
1. new dlls for postres added, now reenabled by default for windows
2. new :regress  facility for testing large programs (see Finalizing a Bot)

Version 4.21
1. Disabled by default postgress code in windows #define DISCARDDATABASE since some dll's it seems to require are not available unless postgresql is installed.

Version 4.2
1. %user and %ip added to make  login information  available
2: datum:  one-liner tablemacro use that can be declared at top level within a topic
3:  can declare a table as variable to avoid saying ... to fill missing args- eg table: ^x variable (^arg1 ^arg2)
4.  new advanced manual section ADVANCED VARIABLES better described indirection variables
5. ChatScript now directly supports PostgresSQL database access and a new manual ChatScript PostgreSQL (in esoterica folder) describes how to use it and added bot postgres

Version 4.1
1. DEFAULT Burst character is now " " instead of "_" 
   Several versions ago the storing on variables of multiple words captured on input
   was changed from _ separation to " " separation, but I neglected to change burst 
   default. Now rectified. BUT... if you had ^burst(_3 _) code you've written, it is
   probably wrong and should have been changed to ^burst(_3 " ").
2.  :diff now writes the differences list also to LOGS/diff.txt
3. nouserlog command line parameter now works in non-server mode
4. added %engine %script %dict  for when those components were made
5  ^lastsaid() returns what bot just said
6. SHARE (bots keep some state in common) see Advanced Topics
7. added ? as standalone (not op) to IF test
8. LIVEDATA subfolder SYSTEM created and canonical.txt, queries.txt, systemessentials.txt moved into it, less likely you will change them.
9. Gambit() and GambitTopics() fixed so it doesnt do topics with the NOGAMBITS flag on unless explicitly asked for.
10. :autoreply generalized to repeat whatever input you tell it to repeat
11. :abstract improved to show reuse() gambit()  refine() respond() instead of just labelling them { code } 

Version 4.03
1. new manual ChatScript App Client Manual and new folder subsections in documentation
2. fixed :reset user bug
3. improved server machine loading of windows chatscript
4. ^getparse() deleted, as now marks can cover as much of the sentence as needed
5. improvements to postagging so src, DICT, LIVEDATA/ENGLISH are incompatible with prior such folders (has no effect on your TOPIC folder data)

Version 4.02
0. Short debug commands like :do, :why, :say had accidently been disabled with 4.0. Fixed
1. version number hadn't been incremented either.

Version 4.01
0. Bug fix for canonical of 1.46 shouldn't be 1
1. Fixing loss of John proper name and others in dictionary
2. Fixed missing ' in output from contractions
3. bug in ^setrejoinder using a labelled rule fixed
4. revision on dictionary -   ~verb_tenses now ~verb_bits and dictionary rebuilt along with LIVEDATA/ENGLISH revisions

Version 4.00
0. setting position reference and direction changed from @_0++ to @_0+ and same for --  and you can now use @_0_i  (inclusive) to make the _0 location be the next thing scanned.
1. the livedata PRIVATE substitutions file has been moved into the scripting language. A new top-level declaration is replace: xxx yyy  which names an individual
substitution to add which is enabled with the DO_PRIVATE $token flag.
2. fixed :verify infinite loop and various other potential crash bugs


Version 3.81  
0. new document Paper- WinningTheLoebners
1. mark xref per concept/word raised from 7 to 32
2. ^tally to get and set an integer value on a word (transient to a volley)
3. ^walkdictionary('fn)  to execute named outputmacro on every dictionary entry
4. new document Bot Harry - moves initial discussion of harry from basic manual
5. new document Bot Stockpile - describes how to run the planner bot
6. new bot and document Bot NLTK - describes how to run natural language analyses

Version 3.8
0. Fixed bug in :shutdown that crashes on shutdown
1. moved hardtrace.log to LOGS and renamed exitlog.txt
2. fixed potential crash bug in spellcheck
3. :shutdown merged into :quit and removed, use :quit for server or non-server exiting chatscript
4. fixed bugs when using :build or :restart on a server
5. new DICT, bits on dictionary entry, data in LIVEDATA/ENGLISH

Version 3.73
0. 3.72 introduced serious tokenization bug that broke contraction processing.   Fixed.
1. new manual ChatScript External Communcations- moves stuff from advanced on calling outside things
2. :topicstats, :abstract, and :topicinfo now accept wildcard topic like ~ne*
3. :commands will now display their results across a server connection (subject to buffer restrictions)
4. #DO_CONDITIONAL_POSTAG removed

Version 3.72
Most of the work has been to increase the accuracy of english pos-tagging. 
extensive changes in engine and dictionary entries properties and systemflags and concepts related to pos-tagging and parsing
1. parserdata.top split off from verbhierachy.top in ONTOLOGY and put in own folder
2.  warning removed - now allows creation of topics with no rules.
3. %sentence is true if input had a subject (possibly implied) and verb.


version 3.71
1. severe bug in pattern matcher fixed

version 3.7
0. :document now takes file or directory 
1 %document now exists to tell you you are in document mode
2  %command (sentence type) and %impliedyou (you as implied subject)
3. added ^RETRY(TOPRULE) to return from a ^refine() to the outermost rule to retry
4. pattern matching can now change direction using @_n++ and @_n--
5. added documentation old paper "Speaker for the Dead"
6: added documentation paper "Writing a Chatbot"
7: added :concepts to tell you quickly how to generalize a word 

version 3.64
0. ^iterator allowed in any rule not just in planning rule and planning example now also uses iterators.
1. ^Tcpopen allows get/post from script
2. :trace display cleaned up, you can do collections like :trace basic  :trace mild  :trace detail,  and :trace tcp added for ^tcpopen.

version 3.63
0. dualmacro:   allows you to use same code as an output macro and as a pattern macro
1. new command line parameter  livedata=   allows you to name your own directory to load livedata from. 
2. :trace now accepts - xxx to turn off stuff, so :trace all - infer - pattern can be used
3. bugfixes and revisions to how Planning system works - read revised doc 
4. :build stockpile and stockpile planner demo now exists
5. :build 1  is now :build Harry

version 3.62
0. authorizedIP.txt file now also takes L_loginnames that can be authorized.
1. new manual - finalizing a bot
2. you can name a range of topics to :verify by ending with * , eg,  :verify ~f* 
3. :verify sampletopic to restrict warnings to only samples resulting in wrong topics.
4. ^Log(file filename new)  use of new to clear out any existing content in file
5.  out-of-band sentences (ones leading with [...]) no long spell check inside the [ ] area nor do they postag/parse.
6.  :silent toggles showing output or not (good for regression tests)
7. :diff file1 file2 - reports lines that differ between these two files.
8. new manual- installing an amazon cloud server.

version 3.61
0:  NOSAMPLES added as topic control flag to block :verify sample on topic
1. named locations in worlddata and concepts are marked with systemflag LOCATIONWORD  and
	concept ~locatedword has been renamed to ~locatedname
2:  :gambittest moved into :verify gambit
3. ^findfact(subject verb object) added
4. new query control field 1 values: S, V, O for queing incoming item as a fact reference.
5.  ^flushfacts(factid) to kill off all facts created after this one
6. added << and >> as additional arithmetic operators on assignment  $$tmp = $$a << 4
7. added NOGAMBITS as topic control flag to block :verify gambit on topic

version 3.6
0. WARNING- DICT binary format changed, src corresponds to it.
1. ^createattribute  function similar to createfact, but insures this is the only fact with this combination of subject and verb.
2. plan:  script element added and ChatScript Planning document added
3. ^Iterator() added for plans
4. ^marked() now returns FAILRULE bit if word is not marked, instead of null.

version 3.54
1. :say xxx yyy zzz  forces chatbot to say that message as its output (good for testing postprocessing scripts)
2. :facts xxxx  displays all facts involving word or meaning given
3. WORLDATA facts on authors changed from "exemplar" to "write"  for their works
4. WORLDATA facts on musicians changed from "exemplar" to "sing" for their works
5. added NOPATTERNS flag to topic define, so can avoid pattern tests using :verify on that topic

version 3.53
1. can now use :trace on functions (turns on all tracing on patternmacro or outputmacro)
2. documented how to deal with issues in proper-name merging in pos-parser documenation.
3. ^uppercase(word) returns 1 if word starts with uppercase letter and 0 otherwise.
3. changed a bunch of worlddata geographic names to have the property ALWAYS_PROPER_NAME_MERGE
4. undocumented pattern notation metal~~  which matches metal and all direct synonyms of it (e.g., alloy).
5. ^trimhistory(who count) added to chop off history
6. restored ... ellipsis as a final argument to a table to fill in rest of args with *
7. added ^reviseoutput(n value) to overwrite existing generated response n with given value
8. added systemproperty for word  NO_PROPER_MERGE to mark concept words which should never merge into a proper name (eg URL)

version 3.52
1. documented ^position() which returns location information on a match variable
2. added ^setposition() to allow you to arbitrarily set current match location in a pattern match.
3. added topic flag nokeys similar to newly documented noblocking, suppresses all keyword :verify tests for that topic
4. documented IGNORESPELLING feature on concepts- suppresses compiler warnings
5. removed documentation on old server feature TIME (server no longer times out, client must if it wants to)

version 3.51
1. :revert renamed to :retry
2. new document ChatScript memorization
3. crash bug fixes for mac

version 3.5
1. added NOUNPHRASE to GetParse()
2. added Set match Position ability to jump backwards during pattern match:  @_0 being an example
3. ^join(AUTOSPACE ...) adds blanks between each item automatically
4. double underscores in output to user will allow a single underscore to show to user
5. bot: xxx  will restrict all topics in a file occurring after this top level command
6. :show topics  will display all topics that the input would trigger by keyword

version 3.4
1. :topics sentence   displays the topics marked, value, and words triggering it
2. :definition displays code of the macro named
3. function argument variables now allowed within format output strings
4. HARRY project and filesx.txt file reorganized
5. new documents PAPER Winning 15 minute conversation & ChatScript Exotica Examples

version 3.3
1. added ^available to see if rule has been used up or not
2. :document mode to read an entire document (in advanced manual not debugging manual)
3. :abstract now can take a filename instead of a topicname
4. :abstract pretty will prettyprint your topic(s)
5. :abstract canon will prettyprint, replacing noncanonical keywords in patterns with canonical ones
6. ^GetParse added to retrieve phrases, clauses, and verbals
7. added :overlap to see what members of set1 are in set2
8. :memstats to show memory use
9. :noreact blocks reacting to input
10. :show pos turns on pos summary
11: parser manual updated to explain how to access parse data from patterns
11: ^flags(word) and ^properties(word) to retrieve dictionary flags on word
12  new tokenflag: ONLY_LOWERCASE ignores all proper nouns and name merging to use lower case forms of words

version 3.2a
1. revised popen to strip out \ off embedded doublequotes in command string

version 3.2
1. function calls to SYSTEM functions can now take relation operations inside patterns.
2. improved pos-tagging and parsing for english
3. optional 3rd argument to export to append to a file rather than overwrite
4. optional preliminary argument to ^log to name file to log to other than userlog
5. ^popen function added
6. new manuals on pos-tagging (for foreign language developers) and control scripts

version 3.1
1. bug fixes - loebner entry version 

version 3.06
1. fixed :trace ~topicname and various other bugs
2. added tokencontrol NO_INFER_QUESTION and added "Controlling Input" to advanced documentation
3. %fact  - most recent fact id
4. brought back the parser

version 3.05c
1. fixed NOUN_TITLE_OF_WORK should not merge proper name into one token "the fox" is a movie name but shouldn't become a single token
2. fixed script compiler failing to notice a; xxxx as a faulty rejoinder
3. fixed tokenization bug
4. added ^position, ^capitalized
5. reinstated English Pos-tagging
6. fixed tablemacro bugs

version 3.04
1. tables accept .KEEP_QUOTE on arguments
2. crash in NEXT fixed

version 3.03
1. fixed crash in :restart (server + standalone)
2. fixed output mode OUTPUT_NOQUOTES

version 3.02  
1. fixed bug in scriptcompiler for u: (!^query())- not before call failed
2. fixed manuals

version 3.0
1. reverted some newer capabilities from deleted versions above 2.0
2. can now escape pattern comparisons - u: (\gesture=smile)
3. support for foreign language dictionaries
4. embedded debugger
5. rule tags to increase introspection

version 2.0
1. added ~money and improved money tokenization and canonization in the system
2. added DO_POSTAG and DO_PARSE and DO_NO_IMPERATIVE as tokenControl values for bots
3. added :postrace command to watch postagging/parsing
4. added dynamic query abilty, using _xx and $xxx variables as arguments for subject, verb, object and '$$ and '~xxx mean dont expand the choice, while '_xxx still means orignal form
5. can block conversion of & to and in script compile, by preceeding & with \
6. added lowercase and canonical to ^POS
7. raised max function argument count to 19

version 1.99	--- last version of 2011
1. fixed SYSTEM command
2. fixed token errors related to questions
3. added |=  &=  ^=  to assignment 
4. made responders allow more data

Version 1.28
1. MAC OS compiles server now
2. TIME= command line option
3. USERLOG NOUSERLOG SERVERLOG NOSERVERLOG
4. LOGS subdirecotry added

Version 1.27
1. allow utf8 and support DO_UTF8_CONVERT to change some accented to normal ascii.
2. renamed :undo to :retry
3. added capitalize to ^pos()
4. $crashmsg

Version 1.26
1. bug fixes for 64-bit linux and other crashes

Version 1.25
1. added ^hasProperty(word, bit)
2. documented ~ as pattern word for current topic
3. added %all
4. altered :undo to take replacement sentence on same line

Version 1.24
1. added :debug to set internal debug flag
2. added a couple of pdf papers about chatscript into documentation
3. added :reset analogous to ^reset(USER)
4. added xs xv xo to test sentence marks in inference system for part 3
5. adding data to :help function to briefly describe most functions
6. added :all to assist in debugging
7: added :undo to retry user input with replacement
8: documented the ?  option in pattern matching (advanced)

Version 1.23
1. system variable %userInput added
2. automated pronoun handling supported along with improved pos tagging

Version 1.22
1. help now takes "function" or "variables"
2. Pos tagging improved, migrating toward full parsing but not there yet
3. linux server no longer busy-waits - Linux build now requires -lrt as well

Version 1.21 
bug fixes, more pos tagging  and doc added for ^match()

Version 1.20
1. improved POS tagging, with rules put into Livedata
2. tables accept ... to mean fill in remaining arguments with *
3. added :testpos to verify pos tagging and regress/postest.txt
4. added :pos to display pos tagging and how it happened
5. :word now can take a series of words to display
6. tables now allow a short-entry to default missing tail entries
7. :help lists all the : commands
8. argument "sandbox" tells server to disallow access to OS from script
9: revised various tables using verb exemplar to use more direct choices:
	star  - for actors/actresses and the movies/tv in which they starred
	write - for authors and the books/poems they wrote
10: chatscript tutorial written by  Erel Segal

Version 1.17
1. fixed bugs in Linux server mode
2. added optional "echo" to :source
3. substitutes adds negation testing on the result arg
4. ~introduction basic sample topic renamed ~introductions

Version 1.16
1. :prepare now takes all and none to mean set as mode for future
2. revised memory usage--- Linux version was dying in malloc

Version 1.15
1. Added ^settopicflags()
2. :topics added
3. An output choice may now be [!$value ...] in addition to [$value ...]

Version 1.14
1. ^keywordtopics now also accepts topics labeled nostay
2. ^mark allowed optional second argument, a match variable and optional 3rd argument, a match_variable
3. ^unmark order of arguments flipped, and 2nd argument made optional
4. script compiler now spell checks patterns and outputs and warns you about questionable words
5: :build optional 2nd argument "nospell" to suppress spell checking and "output" to add output checking
6. documented unipropogate query
7. pos(snake noun 2) -> snakes

Version 1.13
1. revised autogeneration mechanism
2. now accepting [] instead of () for topic and concept definitions
3. manual revised to use [] instead of ()
4. removed ~teenword (now considered ~adultword)
5. handling of ~infinitive improved
6. added :used to see what responders are used up in a topic
7. :verify rule changed to :verify pattern

Version 1.12
1. added POS(noun,word,proper) to uppercase to proper name
2. allowed to have global user variables from a :build commands
3. added autogeneration of responders 

Version 1.11
1. fixed serious bug in script compiler

Version 1.1
1. added %rejoinder (indicates system has a rejoinder it can expect)
2. clarified eraseure in esoterica
3. added ^import and ^export to read and write fact files
4. redefined factset decompositions (@1subject, @1object) and added  @1fact @1verb @1+ @1- @1all

version 1.01
1. stopped deleting the "to" in front of an infinitive.
2. bug fix with repeat topic flag
3. other bug fixes

version 1.0
1. supporting unique names for public servers (if user name comes in from webpage with . prefix).
2. insuring all boolean system variables return "1"/defined and null/undefined
3. removed $defaulttopic variable used by engine which caused a modification to the control script
4. optional 2nd arg to reuse  allows it to skip over a responder that has been marked d
5. added :bot to change bots on the fly
6. table arguments allows to specify a designation that the entry is script by prepending ^ to a "xxx" table entry string. Eval() will execute it
7. modified doublequoted string handling on output side.... normal strings display with their " ".
   strings with \ in front no longer have any special meaning
   strings with ^ in front mean output string w/o quotes as a format string
8. added documentation section Esoterica and Fine Detail
9. earlier optimization added introduced a mega serious bug which was reported and now fixed, screws up a lot.
10. added ^nofail and revised control script to use it

version 0.95
1. bug fixes
2. redescribed noerase so that gambits are always erased. It only controls responders.
3. Continuation  renamed rejoinder

version 0.94
1. multiple copies of topics allowed for multiple-bot handling-- see WHICH BOT in documentation
2. :abstract allowed a topic name argument
3: added flag to mark object-pronouns to improve pos-tagging commands
4. extended assignment syntax to allow any length of operations, so $var = 1 + 2 % 3 * 4 is now legal
5. enhanced output of things like :testtopic and :testoutput to show variables changed as well.
6. changed file format of user save data... any files in USERS folder you have should be removed.
7. moved %token over to $token
8. allowing #define constants as ordinary items in output 
9. added %question
10 moves ~qwords from script to engine

version 0.93 This is considered a stable build and will remain as new builds arrive
1. fixed bug crash on misspelled words and other crashes found by a massive regression test.
2. added windows hardware exception trapping to server so it cant crash
3. split ~singular and ~plural into: ~nounsingular, ~nounplural, ~verbsingular,~verbplural
4. moved ~auxverb from script to engine

version 0.92
1. fixed bugs introduced by spellcheck, which destroyed the interjections system and some canonical forms
2. documented the interjections system in the manual
3. renamed concept set ~aux to ~auxverb
4. added %token and changed the default to allow assignment to all %systemvars.

version 0.91
1. modified :revert to automatically redo your last input
2. fixed serious bug in marking used responses

Version 0.9
0. added ^fact() and removed fact duplicates
1. added :prepare and :postprocess and :testtopic and :real and :testouput
2. added spell checking
3. documented ^analyze and _0=#define for values of dictionarysystem.h
4. bug fixes
5. documented global macrovars ^$var and ^_0
6. added pattern positioning @_2
7. removes :noreact and %noreact
8. :regresssub renamed :verifysub  :dummyinput renamed :fakereply   :writefacts renamed :facts
9. upgraded POS analysis

Version 0.8
0. :shutdown added
1. :verify upgraded with new ability
2. LoebnerVS2008 fixed to compilable
3. misc bug fixes
4. added files for testing servers, better server logging, and writeup on using servers

Version 0.7

0. Internal representation for "refines" changed to use member verb
1. Misc bug fixes, particularly to ^query and the \"xxx" construct
2. added :variables

Version 0.6

0. misc bug fixes and improvements to :word and startup display data
1. removed %bot  (redundant with $bot)
2. added %server (server mode vs standalone mode)
3. added ~unknownword (unrecognized input words)
4. added $var? (can var content be found in sentence) and _9? (can match var be found in sentence)
5. added :stats 
6. added ^save(@setref true/false)
7. added support for Windows server
8. added overlay to run Loebner protocol (different project) under vs2010
9. _var (match variables) restricted to _9 max
10. :define documented
11. added VS2008 build data

Version 0.5 --- base line